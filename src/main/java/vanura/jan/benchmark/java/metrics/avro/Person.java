/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package vanura.jan.benchmark.java.metrics.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Person extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7395148065312937119L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Person\",\"namespace\":\"vanura.jan.benchmark.java.metrics.avro\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"index\",\"type\":\"int\"},{\"name\":\"guid\",\"type\":\"string\"},{\"name\":\"isActive\",\"type\":\"boolean\"},{\"name\":\"balance\",\"type\":\"string\"},{\"name\":\"picture\",\"type\":\"string\"},{\"name\":\"age\",\"type\":\"int\"},{\"name\":\"eyeColor\",\"type\":{\"type\":\"enum\",\"name\":\"EyeColor\",\"symbols\":[\"blue\",\"brown\",\"green\"]}},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"gender\",\"type\":{\"type\":\"enum\",\"name\":\"Gender\",\"symbols\":[\"male\",\"female\"]}},{\"name\":\"company\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"registered\",\"type\":\"string\"},{\"name\":\"latitude\",\"type\":\"float\"},{\"name\":\"longitude\",\"type\":\"float\"},{\"name\":\"tags\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"friends\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Friend\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}]}}},{\"name\":\"greeting\",\"type\":\"string\"},{\"name\":\"favoriteFruit\",\"type\":{\"type\":\"enum\",\"name\":\"Fruit\",\"symbols\":[\"apple\",\"banana\",\"strawberry\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence id;
  @Deprecated public int index;
  @Deprecated public java.lang.CharSequence guid;
  @Deprecated public boolean isActive;
  @Deprecated public java.lang.CharSequence balance;
  @Deprecated public java.lang.CharSequence picture;
  @Deprecated public int age;
  @Deprecated public vanura.jan.benchmark.java.metrics.avro.EyeColor eyeColor;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public vanura.jan.benchmark.java.metrics.avro.Gender gender;
  @Deprecated public java.lang.CharSequence company;
  @Deprecated public java.lang.CharSequence email;
  @Deprecated public java.lang.CharSequence phone;
  @Deprecated public java.lang.CharSequence address;
  @Deprecated public java.lang.CharSequence about;
  @Deprecated public java.lang.CharSequence registered;
  @Deprecated public float latitude;
  @Deprecated public float longitude;
  @Deprecated public java.util.List<java.lang.CharSequence> tags;
  @Deprecated public java.util.List<vanura.jan.benchmark.java.metrics.avro.Friend> friends;
  @Deprecated public java.lang.CharSequence greeting;
  @Deprecated public vanura.jan.benchmark.java.metrics.avro.Fruit favoriteFruit;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Person() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param index The new value for index
   * @param guid The new value for guid
   * @param isActive The new value for isActive
   * @param balance The new value for balance
   * @param picture The new value for picture
   * @param age The new value for age
   * @param eyeColor The new value for eyeColor
   * @param name The new value for name
   * @param gender The new value for gender
   * @param company The new value for company
   * @param email The new value for email
   * @param phone The new value for phone
   * @param address The new value for address
   * @param about The new value for about
   * @param registered The new value for registered
   * @param latitude The new value for latitude
   * @param longitude The new value for longitude
   * @param tags The new value for tags
   * @param friends The new value for friends
   * @param greeting The new value for greeting
   * @param favoriteFruit The new value for favoriteFruit
   */
  public Person(java.lang.CharSequence id, java.lang.Integer index, java.lang.CharSequence guid, java.lang.Boolean isActive, java.lang.CharSequence balance, java.lang.CharSequence picture, java.lang.Integer age, vanura.jan.benchmark.java.metrics.avro.EyeColor eyeColor, java.lang.CharSequence name, vanura.jan.benchmark.java.metrics.avro.Gender gender, java.lang.CharSequence company, java.lang.CharSequence email, java.lang.CharSequence phone, java.lang.CharSequence address, java.lang.CharSequence about, java.lang.CharSequence registered, java.lang.Float latitude, java.lang.Float longitude, java.util.List<java.lang.CharSequence> tags, java.util.List<vanura.jan.benchmark.java.metrics.avro.Friend> friends, java.lang.CharSequence greeting, vanura.jan.benchmark.java.metrics.avro.Fruit favoriteFruit) {
    this.id = id;
    this.index = index;
    this.guid = guid;
    this.isActive = isActive;
    this.balance = balance;
    this.picture = picture;
    this.age = age;
    this.eyeColor = eyeColor;
    this.name = name;
    this.gender = gender;
    this.company = company;
    this.email = email;
    this.phone = phone;
    this.address = address;
    this.about = about;
    this.registered = registered;
    this.latitude = latitude;
    this.longitude = longitude;
    this.tags = tags;
    this.friends = friends;
    this.greeting = greeting;
    this.favoriteFruit = favoriteFruit;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return index;
    case 2: return guid;
    case 3: return isActive;
    case 4: return balance;
    case 5: return picture;
    case 6: return age;
    case 7: return eyeColor;
    case 8: return name;
    case 9: return gender;
    case 10: return company;
    case 11: return email;
    case 12: return phone;
    case 13: return address;
    case 14: return about;
    case 15: return registered;
    case 16: return latitude;
    case 17: return longitude;
    case 18: return tags;
    case 19: return friends;
    case 20: return greeting;
    case 21: return favoriteFruit;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: index = (java.lang.Integer)value$; break;
    case 2: guid = (java.lang.CharSequence)value$; break;
    case 3: isActive = (java.lang.Boolean)value$; break;
    case 4: balance = (java.lang.CharSequence)value$; break;
    case 5: picture = (java.lang.CharSequence)value$; break;
    case 6: age = (java.lang.Integer)value$; break;
    case 7: eyeColor = (vanura.jan.benchmark.java.metrics.avro.EyeColor)value$; break;
    case 8: name = (java.lang.CharSequence)value$; break;
    case 9: gender = (vanura.jan.benchmark.java.metrics.avro.Gender)value$; break;
    case 10: company = (java.lang.CharSequence)value$; break;
    case 11: email = (java.lang.CharSequence)value$; break;
    case 12: phone = (java.lang.CharSequence)value$; break;
    case 13: address = (java.lang.CharSequence)value$; break;
    case 14: about = (java.lang.CharSequence)value$; break;
    case 15: registered = (java.lang.CharSequence)value$; break;
    case 16: latitude = (java.lang.Float)value$; break;
    case 17: longitude = (java.lang.Float)value$; break;
    case 18: tags = (java.util.List<java.lang.CharSequence>)value$; break;
    case 19: friends = (java.util.List<vanura.jan.benchmark.java.metrics.avro.Friend>)value$; break;
    case 20: greeting = (java.lang.CharSequence)value$; break;
    case 21: favoriteFruit = (vanura.jan.benchmark.java.metrics.avro.Fruit)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'index' field.
   * @return The value of the 'index' field.
   */
  public java.lang.Integer getIndex() {
    return index;
  }

  /**
   * Sets the value of the 'index' field.
   * @param value the value to set.
   */
  public void setIndex(java.lang.Integer value) {
    this.index = value;
  }

  /**
   * Gets the value of the 'guid' field.
   * @return The value of the 'guid' field.
   */
  public java.lang.CharSequence getGuid() {
    return guid;
  }

  /**
   * Sets the value of the 'guid' field.
   * @param value the value to set.
   */
  public void setGuid(java.lang.CharSequence value) {
    this.guid = value;
  }

  /**
   * Gets the value of the 'isActive' field.
   * @return The value of the 'isActive' field.
   */
  public java.lang.Boolean getIsActive() {
    return isActive;
  }

  /**
   * Sets the value of the 'isActive' field.
   * @param value the value to set.
   */
  public void setIsActive(java.lang.Boolean value) {
    this.isActive = value;
  }

  /**
   * Gets the value of the 'balance' field.
   * @return The value of the 'balance' field.
   */
  public java.lang.CharSequence getBalance() {
    return balance;
  }

  /**
   * Sets the value of the 'balance' field.
   * @param value the value to set.
   */
  public void setBalance(java.lang.CharSequence value) {
    this.balance = value;
  }

  /**
   * Gets the value of the 'picture' field.
   * @return The value of the 'picture' field.
   */
  public java.lang.CharSequence getPicture() {
    return picture;
  }

  /**
   * Sets the value of the 'picture' field.
   * @param value the value to set.
   */
  public void setPicture(java.lang.CharSequence value) {
    this.picture = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return The value of the 'age' field.
   */
  public java.lang.Integer getAge() {
    return age;
  }

  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(java.lang.Integer value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'eyeColor' field.
   * @return The value of the 'eyeColor' field.
   */
  public vanura.jan.benchmark.java.metrics.avro.EyeColor getEyeColor() {
    return eyeColor;
  }

  /**
   * Sets the value of the 'eyeColor' field.
   * @param value the value to set.
   */
  public void setEyeColor(vanura.jan.benchmark.java.metrics.avro.EyeColor value) {
    this.eyeColor = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'gender' field.
   * @return The value of the 'gender' field.
   */
  public vanura.jan.benchmark.java.metrics.avro.Gender getGender() {
    return gender;
  }

  /**
   * Sets the value of the 'gender' field.
   * @param value the value to set.
   */
  public void setGender(vanura.jan.benchmark.java.metrics.avro.Gender value) {
    this.gender = value;
  }

  /**
   * Gets the value of the 'company' field.
   * @return The value of the 'company' field.
   */
  public java.lang.CharSequence getCompany() {
    return company;
  }

  /**
   * Sets the value of the 'company' field.
   * @param value the value to set.
   */
  public void setCompany(java.lang.CharSequence value) {
    this.company = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'phone' field.
   * @return The value of the 'phone' field.
   */
  public java.lang.CharSequence getPhone() {
    return phone;
  }

  /**
   * Sets the value of the 'phone' field.
   * @param value the value to set.
   */
  public void setPhone(java.lang.CharSequence value) {
    this.phone = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public java.lang.CharSequence getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(java.lang.CharSequence value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'about' field.
   * @return The value of the 'about' field.
   */
  public java.lang.CharSequence getAbout() {
    return about;
  }

  /**
   * Sets the value of the 'about' field.
   * @param value the value to set.
   */
  public void setAbout(java.lang.CharSequence value) {
    this.about = value;
  }

  /**
   * Gets the value of the 'registered' field.
   * @return The value of the 'registered' field.
   */
  public java.lang.CharSequence getRegistered() {
    return registered;
  }

  /**
   * Sets the value of the 'registered' field.
   * @param value the value to set.
   */
  public void setRegistered(java.lang.CharSequence value) {
    this.registered = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   * @return The value of the 'latitude' field.
   */
  public java.lang.Float getLatitude() {
    return latitude;
  }

  /**
   * Sets the value of the 'latitude' field.
   * @param value the value to set.
   */
  public void setLatitude(java.lang.Float value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   * @return The value of the 'longitude' field.
   */
  public java.lang.Float getLongitude() {
    return longitude;
  }

  /**
   * Sets the value of the 'longitude' field.
   * @param value the value to set.
   */
  public void setLongitude(java.lang.Float value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'tags' field.
   * @return The value of the 'tags' field.
   */
  public java.util.List<java.lang.CharSequence> getTags() {
    return tags;
  }

  /**
   * Sets the value of the 'tags' field.
   * @param value the value to set.
   */
  public void setTags(java.util.List<java.lang.CharSequence> value) {
    this.tags = value;
  }

  /**
   * Gets the value of the 'friends' field.
   * @return The value of the 'friends' field.
   */
  public java.util.List<vanura.jan.benchmark.java.metrics.avro.Friend> getFriends() {
    return friends;
  }

  /**
   * Sets the value of the 'friends' field.
   * @param value the value to set.
   */
  public void setFriends(java.util.List<vanura.jan.benchmark.java.metrics.avro.Friend> value) {
    this.friends = value;
  }

  /**
   * Gets the value of the 'greeting' field.
   * @return The value of the 'greeting' field.
   */
  public java.lang.CharSequence getGreeting() {
    return greeting;
  }

  /**
   * Sets the value of the 'greeting' field.
   * @param value the value to set.
   */
  public void setGreeting(java.lang.CharSequence value) {
    this.greeting = value;
  }

  /**
   * Gets the value of the 'favoriteFruit' field.
   * @return The value of the 'favoriteFruit' field.
   */
  public vanura.jan.benchmark.java.metrics.avro.Fruit getFavoriteFruit() {
    return favoriteFruit;
  }

  /**
   * Sets the value of the 'favoriteFruit' field.
   * @param value the value to set.
   */
  public void setFavoriteFruit(vanura.jan.benchmark.java.metrics.avro.Fruit value) {
    this.favoriteFruit = value;
  }

  /**
   * Creates a new Person RecordBuilder.
   * @return A new Person RecordBuilder
   */
  public static vanura.jan.benchmark.java.metrics.avro.Person.Builder newBuilder() {
    return new vanura.jan.benchmark.java.metrics.avro.Person.Builder();
  }

  /**
   * Creates a new Person RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Person RecordBuilder
   */
  public static vanura.jan.benchmark.java.metrics.avro.Person.Builder newBuilder(vanura.jan.benchmark.java.metrics.avro.Person.Builder other) {
    return new vanura.jan.benchmark.java.metrics.avro.Person.Builder(other);
  }

  /**
   * Creates a new Person RecordBuilder by copying an existing Person instance.
   * @param other The existing instance to copy.
   * @return A new Person RecordBuilder
   */
  public static vanura.jan.benchmark.java.metrics.avro.Person.Builder newBuilder(vanura.jan.benchmark.java.metrics.avro.Person other) {
    return new vanura.jan.benchmark.java.metrics.avro.Person.Builder(other);
  }

  /**
   * RecordBuilder for Person instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Person>
    implements org.apache.avro.data.RecordBuilder<Person> {

    private java.lang.CharSequence id;
    private int index;
    private java.lang.CharSequence guid;
    private boolean isActive;
    private java.lang.CharSequence balance;
    private java.lang.CharSequence picture;
    private int age;
    private vanura.jan.benchmark.java.metrics.avro.EyeColor eyeColor;
    private java.lang.CharSequence name;
    private vanura.jan.benchmark.java.metrics.avro.Gender gender;
    private java.lang.CharSequence company;
    private java.lang.CharSequence email;
    private java.lang.CharSequence phone;
    private java.lang.CharSequence address;
    private java.lang.CharSequence about;
    private java.lang.CharSequence registered;
    private float latitude;
    private float longitude;
    private java.util.List<java.lang.CharSequence> tags;
    private java.util.List<vanura.jan.benchmark.java.metrics.avro.Friend> friends;
    private java.lang.CharSequence greeting;
    private vanura.jan.benchmark.java.metrics.avro.Fruit favoriteFruit;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(vanura.jan.benchmark.java.metrics.avro.Person.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.index)) {
        this.index = data().deepCopy(fields()[1].schema(), other.index);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.guid)) {
        this.guid = data().deepCopy(fields()[2].schema(), other.guid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isActive)) {
        this.isActive = data().deepCopy(fields()[3].schema(), other.isActive);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.balance)) {
        this.balance = data().deepCopy(fields()[4].schema(), other.balance);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.picture)) {
        this.picture = data().deepCopy(fields()[5].schema(), other.picture);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.age)) {
        this.age = data().deepCopy(fields()[6].schema(), other.age);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.eyeColor)) {
        this.eyeColor = data().deepCopy(fields()[7].schema(), other.eyeColor);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.name)) {
        this.name = data().deepCopy(fields()[8].schema(), other.name);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.gender)) {
        this.gender = data().deepCopy(fields()[9].schema(), other.gender);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.company)) {
        this.company = data().deepCopy(fields()[10].schema(), other.company);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.email)) {
        this.email = data().deepCopy(fields()[11].schema(), other.email);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.phone)) {
        this.phone = data().deepCopy(fields()[12].schema(), other.phone);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.address)) {
        this.address = data().deepCopy(fields()[13].schema(), other.address);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.about)) {
        this.about = data().deepCopy(fields()[14].schema(), other.about);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.registered)) {
        this.registered = data().deepCopy(fields()[15].schema(), other.registered);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.latitude)) {
        this.latitude = data().deepCopy(fields()[16].schema(), other.latitude);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.longitude)) {
        this.longitude = data().deepCopy(fields()[17].schema(), other.longitude);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.tags)) {
        this.tags = data().deepCopy(fields()[18].schema(), other.tags);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.friends)) {
        this.friends = data().deepCopy(fields()[19].schema(), other.friends);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.greeting)) {
        this.greeting = data().deepCopy(fields()[20].schema(), other.greeting);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.favoriteFruit)) {
        this.favoriteFruit = data().deepCopy(fields()[21].schema(), other.favoriteFruit);
        fieldSetFlags()[21] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Person instance
     * @param other The existing instance to copy.
     */
    private Builder(vanura.jan.benchmark.java.metrics.avro.Person other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.index)) {
        this.index = data().deepCopy(fields()[1].schema(), other.index);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.guid)) {
        this.guid = data().deepCopy(fields()[2].schema(), other.guid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.isActive)) {
        this.isActive = data().deepCopy(fields()[3].schema(), other.isActive);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.balance)) {
        this.balance = data().deepCopy(fields()[4].schema(), other.balance);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.picture)) {
        this.picture = data().deepCopy(fields()[5].schema(), other.picture);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.age)) {
        this.age = data().deepCopy(fields()[6].schema(), other.age);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.eyeColor)) {
        this.eyeColor = data().deepCopy(fields()[7].schema(), other.eyeColor);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.name)) {
        this.name = data().deepCopy(fields()[8].schema(), other.name);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.gender)) {
        this.gender = data().deepCopy(fields()[9].schema(), other.gender);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.company)) {
        this.company = data().deepCopy(fields()[10].schema(), other.company);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.email)) {
        this.email = data().deepCopy(fields()[11].schema(), other.email);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.phone)) {
        this.phone = data().deepCopy(fields()[12].schema(), other.phone);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.address)) {
        this.address = data().deepCopy(fields()[13].schema(), other.address);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.about)) {
        this.about = data().deepCopy(fields()[14].schema(), other.about);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.registered)) {
        this.registered = data().deepCopy(fields()[15].schema(), other.registered);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.latitude)) {
        this.latitude = data().deepCopy(fields()[16].schema(), other.latitude);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.longitude)) {
        this.longitude = data().deepCopy(fields()[17].schema(), other.longitude);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.tags)) {
        this.tags = data().deepCopy(fields()[18].schema(), other.tags);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.friends)) {
        this.friends = data().deepCopy(fields()[19].schema(), other.friends);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.greeting)) {
        this.greeting = data().deepCopy(fields()[20].schema(), other.greeting);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.favoriteFruit)) {
        this.favoriteFruit = data().deepCopy(fields()[21].schema(), other.favoriteFruit);
        fieldSetFlags()[21] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'index' field.
      * @return The value.
      */
    public java.lang.Integer getIndex() {
      return index;
    }

    /**
      * Sets the value of the 'index' field.
      * @param value The value of 'index'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setIndex(int value) {
      validate(fields()[1], value);
      this.index = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'index' field has been set.
      * @return True if the 'index' field has been set, false otherwise.
      */
    public boolean hasIndex() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'index' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearIndex() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'guid' field.
      * @return The value.
      */
    public java.lang.CharSequence getGuid() {
      return guid;
    }

    /**
      * Sets the value of the 'guid' field.
      * @param value The value of 'guid'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setGuid(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.guid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'guid' field has been set.
      * @return True if the 'guid' field has been set, false otherwise.
      */
    public boolean hasGuid() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'guid' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearGuid() {
      guid = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'isActive' field.
      * @return The value.
      */
    public java.lang.Boolean getIsActive() {
      return isActive;
    }

    /**
      * Sets the value of the 'isActive' field.
      * @param value The value of 'isActive'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setIsActive(boolean value) {
      validate(fields()[3], value);
      this.isActive = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'isActive' field has been set.
      * @return True if the 'isActive' field has been set, false otherwise.
      */
    public boolean hasIsActive() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'isActive' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearIsActive() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'balance' field.
      * @return The value.
      */
    public java.lang.CharSequence getBalance() {
      return balance;
    }

    /**
      * Sets the value of the 'balance' field.
      * @param value The value of 'balance'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setBalance(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.balance = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'balance' field has been set.
      * @return True if the 'balance' field has been set, false otherwise.
      */
    public boolean hasBalance() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'balance' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearBalance() {
      balance = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'picture' field.
      * @return The value.
      */
    public java.lang.CharSequence getPicture() {
      return picture;
    }

    /**
      * Sets the value of the 'picture' field.
      * @param value The value of 'picture'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setPicture(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.picture = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'picture' field has been set.
      * @return True if the 'picture' field has been set, false otherwise.
      */
    public boolean hasPicture() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'picture' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearPicture() {
      picture = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * @return The value.
      */
    public java.lang.Integer getAge() {
      return age;
    }

    /**
      * Sets the value of the 'age' field.
      * @param value The value of 'age'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setAge(int value) {
      validate(fields()[6], value);
      this.age = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'age' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearAge() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'eyeColor' field.
      * @return The value.
      */
    public vanura.jan.benchmark.java.metrics.avro.EyeColor getEyeColor() {
      return eyeColor;
    }

    /**
      * Sets the value of the 'eyeColor' field.
      * @param value The value of 'eyeColor'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setEyeColor(vanura.jan.benchmark.java.metrics.avro.EyeColor value) {
      validate(fields()[7], value);
      this.eyeColor = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'eyeColor' field has been set.
      * @return True if the 'eyeColor' field has been set, false otherwise.
      */
    public boolean hasEyeColor() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'eyeColor' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearEyeColor() {
      eyeColor = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setName(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.name = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearName() {
      name = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'gender' field.
      * @return The value.
      */
    public vanura.jan.benchmark.java.metrics.avro.Gender getGender() {
      return gender;
    }

    /**
      * Sets the value of the 'gender' field.
      * @param value The value of 'gender'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setGender(vanura.jan.benchmark.java.metrics.avro.Gender value) {
      validate(fields()[9], value);
      this.gender = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'gender' field has been set.
      * @return True if the 'gender' field has been set, false otherwise.
      */
    public boolean hasGender() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'gender' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearGender() {
      gender = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'company' field.
      * @return The value.
      */
    public java.lang.CharSequence getCompany() {
      return company;
    }

    /**
      * Sets the value of the 'company' field.
      * @param value The value of 'company'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setCompany(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.company = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'company' field has been set.
      * @return True if the 'company' field has been set, false otherwise.
      */
    public boolean hasCompany() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'company' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearCompany() {
      company = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }

    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.email = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearEmail() {
      email = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone' field.
      * @return The value.
      */
    public java.lang.CharSequence getPhone() {
      return phone;
    }

    /**
      * Sets the value of the 'phone' field.
      * @param value The value of 'phone'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setPhone(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.phone = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'phone' field has been set.
      * @return True if the 'phone' field has been set, false otherwise.
      */
    public boolean hasPhone() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'phone' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearPhone() {
      phone = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public java.lang.CharSequence getAddress() {
      return address;
    }

    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setAddress(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.address = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearAddress() {
      address = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'about' field.
      * @return The value.
      */
    public java.lang.CharSequence getAbout() {
      return about;
    }

    /**
      * Sets the value of the 'about' field.
      * @param value The value of 'about'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setAbout(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.about = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'about' field has been set.
      * @return True if the 'about' field has been set, false otherwise.
      */
    public boolean hasAbout() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'about' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearAbout() {
      about = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'registered' field.
      * @return The value.
      */
    public java.lang.CharSequence getRegistered() {
      return registered;
    }

    /**
      * Sets the value of the 'registered' field.
      * @param value The value of 'registered'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setRegistered(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.registered = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'registered' field has been set.
      * @return True if the 'registered' field has been set, false otherwise.
      */
    public boolean hasRegistered() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'registered' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearRegistered() {
      registered = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'latitude' field.
      * @return The value.
      */
    public java.lang.Float getLatitude() {
      return latitude;
    }

    /**
      * Sets the value of the 'latitude' field.
      * @param value The value of 'latitude'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setLatitude(float value) {
      validate(fields()[16], value);
      this.latitude = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'latitude' field has been set.
      * @return True if the 'latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'latitude' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearLatitude() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'longitude' field.
      * @return The value.
      */
    public java.lang.Float getLongitude() {
      return longitude;
    }

    /**
      * Sets the value of the 'longitude' field.
      * @param value The value of 'longitude'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setLongitude(float value) {
      validate(fields()[17], value);
      this.longitude = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'longitude' field has been set.
      * @return True if the 'longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'longitude' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearLongitude() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'tags' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getTags() {
      return tags;
    }

    /**
      * Sets the value of the 'tags' field.
      * @param value The value of 'tags'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setTags(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[18], value);
      this.tags = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'tags' field has been set.
      * @return True if the 'tags' field has been set, false otherwise.
      */
    public boolean hasTags() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'tags' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearTags() {
      tags = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'friends' field.
      * @return The value.
      */
    public java.util.List<vanura.jan.benchmark.java.metrics.avro.Friend> getFriends() {
      return friends;
    }

    /**
      * Sets the value of the 'friends' field.
      * @param value The value of 'friends'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setFriends(java.util.List<vanura.jan.benchmark.java.metrics.avro.Friend> value) {
      validate(fields()[19], value);
      this.friends = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'friends' field has been set.
      * @return True if the 'friends' field has been set, false otherwise.
      */
    public boolean hasFriends() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'friends' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearFriends() {
      friends = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'greeting' field.
      * @return The value.
      */
    public java.lang.CharSequence getGreeting() {
      return greeting;
    }

    /**
      * Sets the value of the 'greeting' field.
      * @param value The value of 'greeting'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setGreeting(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.greeting = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'greeting' field has been set.
      * @return True if the 'greeting' field has been set, false otherwise.
      */
    public boolean hasGreeting() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'greeting' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearGreeting() {
      greeting = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'favoriteFruit' field.
      * @return The value.
      */
    public vanura.jan.benchmark.java.metrics.avro.Fruit getFavoriteFruit() {
      return favoriteFruit;
    }

    /**
      * Sets the value of the 'favoriteFruit' field.
      * @param value The value of 'favoriteFruit'.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder setFavoriteFruit(vanura.jan.benchmark.java.metrics.avro.Fruit value) {
      validate(fields()[21], value);
      this.favoriteFruit = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'favoriteFruit' field has been set.
      * @return True if the 'favoriteFruit' field has been set, false otherwise.
      */
    public boolean hasFavoriteFruit() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'favoriteFruit' field.
      * @return This builder.
      */
    public vanura.jan.benchmark.java.metrics.avro.Person.Builder clearFavoriteFruit() {
      favoriteFruit = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    @Override
    public Person build() {
      try {
        Person record = new Person();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.index = fieldSetFlags()[1] ? this.index : (java.lang.Integer) defaultValue(fields()[1]);
        record.guid = fieldSetFlags()[2] ? this.guid : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.isActive = fieldSetFlags()[3] ? this.isActive : (java.lang.Boolean) defaultValue(fields()[3]);
        record.balance = fieldSetFlags()[4] ? this.balance : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.picture = fieldSetFlags()[5] ? this.picture : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.age = fieldSetFlags()[6] ? this.age : (java.lang.Integer) defaultValue(fields()[6]);
        record.eyeColor = fieldSetFlags()[7] ? this.eyeColor : (vanura.jan.benchmark.java.metrics.avro.EyeColor) defaultValue(fields()[7]);
        record.name = fieldSetFlags()[8] ? this.name : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.gender = fieldSetFlags()[9] ? this.gender : (vanura.jan.benchmark.java.metrics.avro.Gender) defaultValue(fields()[9]);
        record.company = fieldSetFlags()[10] ? this.company : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.email = fieldSetFlags()[11] ? this.email : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.phone = fieldSetFlags()[12] ? this.phone : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.address = fieldSetFlags()[13] ? this.address : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.about = fieldSetFlags()[14] ? this.about : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.registered = fieldSetFlags()[15] ? this.registered : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.latitude = fieldSetFlags()[16] ? this.latitude : (java.lang.Float) defaultValue(fields()[16]);
        record.longitude = fieldSetFlags()[17] ? this.longitude : (java.lang.Float) defaultValue(fields()[17]);
        record.tags = fieldSetFlags()[18] ? this.tags : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[18]);
        record.friends = fieldSetFlags()[19] ? this.friends : (java.util.List<vanura.jan.benchmark.java.metrics.avro.Friend>) defaultValue(fields()[19]);
        record.greeting = fieldSetFlags()[20] ? this.greeting : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.favoriteFruit = fieldSetFlags()[21] ? this.favoriteFruit : (vanura.jan.benchmark.java.metrics.avro.Fruit) defaultValue(fields()[21]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
